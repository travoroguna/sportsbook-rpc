// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file proto/identity/identity.proto (package identity, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateUserRequest, DeleteUserRequest, DeleteUserResponse, GetUserRequest, LoginRequest, LoginResponse, UpdateUserRequest, UserResponse, VerifyUserRequest, VerifyUserResponse } from "./identity_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Identity service for user management
 *
 * @generated from service identity.IdentityService
 */
export const IdentityService = {
  typeName: "identity.IdentityService",
  methods: {
    /**
     * Create a new user
     *
     * @generated from rpc identity.IdentityService.CreateUser
     */
    createUser: {
      name: "CreateUser",
      I: CreateUserRequest,
      O: UserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get user by ID
     *
     * @generated from rpc identity.IdentityService.GetUser
     */
    getUser: {
      name: "GetUser",
      I: GetUserRequest,
      O: UserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update existing user
     *
     * @generated from rpc identity.IdentityService.UpdateUser
     */
    updateUser: {
      name: "UpdateUser",
      I: UpdateUserRequest,
      O: UserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a user
     *
     * @generated from rpc identity.IdentityService.DeleteUser
     */
    deleteUser: {
      name: "DeleteUser",
      I: DeleteUserRequest,
      O: DeleteUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Authenticate user (login)
     *
     * @generated from rpc identity.IdentityService.Login
     */
    login: {
      name: "Login",
      I: LoginRequest,
      O: LoginResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify user account
     *
     * @generated from rpc identity.IdentityService.VerifyUser
     */
    verifyUser: {
      name: "VerifyUser",
      I: VerifyUserRequest,
      O: VerifyUserResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

